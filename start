#!/usr/bin/env bash

set -e

export GSUTIL="/usr/bin/gsutil"
export GCLOUD="/usr/bin/gcloud"
export STELLAR_CORE_CFG="/stellar-core.cfg"
export STELLAR_CMD="stellar-core --conf ${STELLAR_CORE_CFG}"
export GCLOUD_STORAGE_CREDENTIALS="/secrets/gcloud/storage/credentials.json"

echo ""
echo "Starting Stellar"
echo ""

cp /configs/stellar-core.cfg /;

if [ ! -z "${STELLAR_CORE_CFG_URL}" ]; then
    echo "Loading configuration file (${STELLAR_CORE_CFG_URL})..."
    curl -sSfL "${STELLAR_CORE_CFG_URL}" -o ${STELLAR_CORE_CFG} \
        || { echo "ERROR: Cannot download content of ${STELLAR_CORE_CFG} from URL ${STELLAR_CORE_CFG_URL}"; exit 1; }
    echo "...configuration file loaded."
fi

if [ -z "${DATABASE_URL}" ]
then
    if grep __DATABASE_URL__ ${STELLAR_CORE_CFG} > /dev/null
    then
        echo "ERROR: Environment variable DATABASE_URL is required" && false
    fi
else
    if ! grep __DATABASE_URL__ ${STELLAR_CORE_CFG} > /dev/null
    then
        echo "ERROR: no '__DATABASE_URL__' placeholder in stellar-core.cfg" && false
    else
        # Horizon uses format postgres://host:port/dbname?param=value and stellar core uses postgresql://dbname=... port=.. host=..
        # following regexp convert horizon style to stellar style
        DATABASE_URL=`echo ${DATABASE_URL} \
            | sed -r 's|postgres://([^:]+)(:([^@]+))?@([^:/]+)(:([^/]+))?/([^?]+)(\?(.+))*$|postgresql://user=\1 password=\3 host=\4 port=\6 dbname=\7 \9|' \
            | sed -r 's#(/| )[^/ ]+=( |$)#\1\2#'`
        sed -i "s|__DATABASE_URL__|${DATABASE_URL}|" ${STELLAR_CORE_CFG}
        echo "DATABASE_URL='${DATABASE_URL}' substituted."
    fi
fi

if [ -z "${GS_BUCKET_ARCHIVES_PATH}" ]
then
    if grep __GS_BUCKET_ARCHIVES_PATH__ ${STELLAR_CORE_CFG} > /dev/null
    then
        echo "ERROR: Environment variable GS_BUCKET_ARCHIVES_PATH is required" && false
    fi
else
    if ! grep __GS_BUCKET_ARCHIVES_PATH__ ${STELLAR_CORE_CFG} > /dev/null
    then
        echo "ERROR: no '__GS_BUCKET_ARCHIVES_PATH__' placeholder in stellar-core.cfg" && false
    else
        echo "Setting Gsutil credentials..."
        gcloud auth activate-service-account --key-file="${GCLOUD_STORAGE_CREDENTIALS}"
        echo "...Gsutil has been configured."
        sed -i "s|__GS_BUCKET_ARCHIVES_PATH__|${GS_BUCKET_ARCHIVES_PATH}|" ${STELLAR_CORE_CFG}
        echo "GS_BUCKET_ARCHIVES_PATH='${GS_BUCKET_ARCHIVES_PATH}' substituted."
    fi
fi

echo "...configuration file loaded"

if [ -z $NONEWHIST ]
then
    if [ -z "${ARCHIVE_NAME}" ]; then
        echo "ERROR: Environment variable ARCHIVE_NAME is required!" >&2  && false
    fi
    echo "Initializing history archive"
    ${STELLAR_CMD} --newhist ${ARCHIVE_NAME}
fi

if [ -z $NONEWDB ]
then
    echo "Initializing database"
    rm -rf /data/buckets
    ${STELLAR_CMD} --newdb
fi

echo "Starting Stellar node"
${STELLAR_CMD}
