#!/usr/bin/env bash

set -e

export STELLAR_HOME="/opt/stellar"
export SUPHOME="$STELLAR_HOME/supervisor"
export GSUTIL="/usr/bin/gsutil"
export GCLOUD="/usr/bin/gcloud"
export STELLAR_USERNAME="stellar"
export STELLAR_CORE_CFG="/opt/stellar/core/etc/stellar-core.cfg"
export STELLAR_CMD="stellar-core --conf ${STELLAR_CORE_CFG}"

function run_as_stellar() {
    sudo -u ${STELLAR_USERNAME} -- sh -c "cd /opt/stellar/core/; $1"
}

echo ""
echo "Starting Stellar"
echo ""

echo "Setting Gsutil credentials..."

for var in PROJECT GS_ACCESS_KEY_ID GS_SECRET_ACCESS_KEY;
do
    if [ -z "${!var}" ]; then
        echo "ERROR: Environment variable ${var} is required!" && false
    fi
done

echo -e "${GS_ACCESS_KEY_ID}\n${GS_SECRET_ACCESS_KEY}\n" | sudo -u ${STELLAR_USERNAME} ${GSUTIL} config -a
sudo -u ${STELLAR_USERNAME} ${GCLOUD} config set project ${PROJECT}

echo "...Gsutil has been configured."

if [ ! -z "${STELLAR_CORE_CFG_URL}" ]; then
    ( curl -sSfL "${STELLAR_CORE_CFG_URL}" -o ${STELLAR_CORE_CFG} \
        && chown ${STELLAR_USERNAME}:${STELLAR_USERNAME} ${STELLAR_CORE_CFG} ) \
        || { echo "ERROR: Cannot download content of ${STELLAR_CORE_CFG} from URL ${STELLAR_CORE_CFG_URL}"; exit 1; }
fi

while [[ -n "$1" ]]; do
  ARG="$1"
  shift

  case "${ARG}" in
  --nonewdb)
    NONEWDB=1
    ;;
  --nonewhist)
    NONEWHIST=1
    ;;
  *)
    echo "Unknown container argument '$ARG'" >&2
    exit 1
  esac
done

if [ -z $NONEWHIST ]
then
    if [ -z "${ARCHIVE_NAME}" ]; then
        echo "ERROR: Environment variable ARCHIVE_NAME is required!" && false
    fi
    echo "Initializing history archive"
    run_as_stellar "${STELLAR_CMD} --newhist ${ARCHIVE_NAME}"
fi

if [ -z $NONEWDB ]
then
    echo "Initializing database"
        run_as_stellar "${STELLAR_CMD} --newdb"
fi

echo "starting supervisor"
exec supervisord -n -c $SUPHOME/etc/supervisord.conf

